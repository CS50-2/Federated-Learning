# -*- coding: utf-8 -*-
"""Visualization of experimental results .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17gr5FEfDCo32gDYzOGcZlDqSGz-5Q8wT
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import matplotlib.pyplot as plt

# csv path
loss_csv_100 = "training_data_20250402_191720_loss_100.csv"
grc_csv_100 = "training_data_20250402_201413_grc_100.csv"
loss_csv_300 = "training_data_20250402_231623_loss_300.csv"
grc_csv_300 = "training_data_20250402_223803_grc_300.csv"

# load data
df_loss_100 = pd.read_csv(loss_csv_100)
df_grc_100 = pd.read_csv(grc_csv_100)
df_loss_300 = pd.read_csv(loss_csv_300)
df_grc_300 = pd.read_csv(grc_csv_300)

# Convert grc to numeric values ​​(instead of strings)
for df in [df_grc_100, df_grc_300]:
    df['GRC Weight - Loss'] = pd.to_numeric(df['GRC Weight - Loss'], errors='coerce')
    df['GRC Weight - Diff'] = pd.to_numeric(df['GRC Weight - Diff'], errors='coerce')

# "rounds vs Accuracy"
plt.figure(figsize=(8, 5))
plt.plot(df_loss_100['Round'], df_loss_100['Accuracy'], label='Loss-based', color='blue')
plt.plot(df_grc_100['Round'], df_grc_100['Accuracy'], label='GRC-based', color='red')
plt.xlabel("Round")
plt.ylabel("Test Accuracy (%)")
plt.title("Accuracy over Rounds (100 rounds)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# "Communication Counts vs Accuracy"
plt.figure(figsize=(8, 5))
plt.plot(df_loss_100['Total communication counts'], df_loss_100['Accuracy'], label='Loss-based', color='blue')
plt.plot(df_grc_100['Total communication counts'], df_grc_100['Accuracy'], label='GRC-based', color='red')
plt.xlabel("Total Communication Count")
plt.ylabel("Test Accuracy (%)")
plt.title("Accuracy vs Communication (100 rounds)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# grc w_loss & w_diff changes
plt.figure(figsize=(8, 5))
plt.plot(df_grc_100['Round'], df_grc_100['GRC Weight - Loss'], label='w_loss', color='red')
plt.plot(df_grc_100['Round'], df_grc_100['GRC Weight - Diff'], label='w_diff', color='blue')
plt.xlabel("Round")
plt.ylabel("Entropy Weight")
plt.title("GRC Weights over Rounds (100 rounds)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 5))
plt.plot(df_loss_300['Round'], df_loss_300['Accuracy'], label='Loss-based', color='blue')
plt.plot(df_grc_300['Round'], df_grc_300['Accuracy'], label='GRC-based', color='red')
plt.xlabel("Round")
plt.ylabel("Test Accuracy (%)")
plt.title("Accuracy over Rounds (300 rounds)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 5))
plt.plot(df_loss_300['Total communication counts'], df_loss_300['Accuracy'], label='Loss-based', color='blue')
plt.plot(df_grc_300['Total communication counts'], df_grc_300['Accuracy'], label='GRC-based', color='red')
plt.xlabel("Total Communication Count")
plt.ylabel("Test Accuracy (%)")
plt.title("Accuracy vs Communication (300 rounds)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 5))
plt.plot(df_grc_300['Round'], df_grc_300['GRC Weight - Loss'], label='w_loss', color='red')
plt.plot(df_grc_300['Round'], df_grc_300['GRC Weight - Diff'], label='w_diff', color='blue')
plt.xlabel("Round")
plt.ylabel("Entropy Weight")
plt.title("GRC Weights over Rounds (300 rounds)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()